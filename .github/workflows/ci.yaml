name: CI

on:
  push:
    branches-ignore:
    - 'release/**'
    paths-ignore:
    - '**/*.md'
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
    - '**/*.md'

env:
    net_core_version: 6.0.100-rc.1.21414.1

jobs:
  build-Android:
    runs-on: windows-2019

    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1 
      with:
        dotnet-version: ${{ env.net_core_version }}
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Install workload
      run: |
        dotnet workload install android-aot --include-previews --ignore-failed-sources --verbosity detailed

    - name: Build App.Cross.Droid
      run: dotnet build ./Nivaes.TimeLine.Droid/ --configuration Release

    #- name: Build App.Cross.Droid.Sample
    #  run: dotnet build ./Nivaes.TimeLine.Droid.Sample/ --configuration Release --runtime android-x64

  build-iOS:
    runs-on: macos-10.15

    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core 3.1.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1 
      with:
        dotnet-version: ${{ env.net_core_version }}
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Install workload
      shell: pwsh
      run: |
        dotnet workload install ios
        dotnet workload install macos
        dotnet workload install maccatalyst
        dotnet workload install tvos

    - name: Install Xcode
      uses: devbotsxyz/xcode-select@v1

    #- name: Build App.Cross.iOS
    #  run: dotnet build ./Nivaes.TimeLine.iOS/ --configuration Release --runtime iossimulator-x64

    - name: Build App.Cross.iOS
      run: dotnet build ./Nivaes.TimeLine.iOS/ --configuration Release

    #- name: Build TimeLine.iOS.Sample
    #  run: dotnet build ./Nivaes.TimeLine.iOS.Sample/ --configuration Release

  build-Windows:
    runs-on: windows-2019
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1 
      with:
        dotnet-version: ${{ env.net_core_version }}
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Install dependencies
      run: |
        msbuild /t:restore ./Nivaes.TimeLine.WinUI/
        msbuild /t:restore ./Nivaes.TimeLine.WinUI.Windows.Sample/
        msbuild /t:restore ./Nivaes.TimeLine.WinUI.WPF.Windows.Sample/

    #- name: Build App.Cross.WinUI
    #  run: msbuild ./Nivaes.TimeLine.WinUI/ /property:Configuration=Release

    #- name: Build App.Cross.WinUI
    #  run: dotnet build ./Nivaes.TimeLine.WinUI/ --configuration Release

    #- name: Build Nivaes.TimeLine.WinUI.Windows.Sample
    #  run: msbuild ./Nivaes.TimeLine.WinUI.Windows.Sample/ /property:Configuration=Release

    #- name: Build Nivaes.TimeLine.WinUI.WPF.Windows.Sample
    #  run: msbuild ./Nivaes.TimeLine.WinUI.WPF.Windows.Sample/ /property:Configuration=Release
