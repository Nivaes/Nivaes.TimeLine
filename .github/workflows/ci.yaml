name: CI

on:
  push:
    branches-ignore:
    - 'release/**'
    paths-ignore:
    - '**/*.md'
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
    - '**/*.md'

env:
    net_core_version: 8.0.201

jobs:
  build-Android:
    runs-on: windows-2022

    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.net_core_version }}
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: 'microsoft'
        java-version: '17'

    - name: Install workload
      run: |
        dotnet workload install android --ignore-failed-sources --verbosity detailed

    - name: Restore Dependencies
      run: dotnet restore ./Nivaes.TimeLine.Droid/

    - name: Build App.Cross.Droid
      run: |
          dotnet build ./Nivaes.TimeLine.Droid/ --configuration Release --framework net8.0-android --no-restore
          dotnet build ./Nivaes.TimeLine.Droid.Sample/ --configuration Release --framework net8.0-android --no-restore

    #- name: Build App.Cross.Droid.Sample
    #  run: dotnet build ./Nivaes.TimeLine.Droid.Sample/ --configuration Release --runtime android-x64

  build-iOS:
    runs-on: macos-latest

    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3 
      with:
        dotnet-version: ${{ env.net_core_version }}
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Install workload
      shell: pwsh
      run: |
        dotnet workload install ios
        dotnet workload install macos
        dotnet workload install maccatalyst
        dotnet workload install tvos

    - name: Install Xcode
      uses: devbotsxyz/xcode-select@v1

    - name: Restore Dependencies
      run: dotnet restore ./Nivaes.TimeLine.iOS/
    #- name: Build App.Cross.iOS
    #  run: dotnet build ./Nivaes.TimeLine.iOS/ --configuration Release --runtime iossimulator-x64

    - name: Build App.Cross.iOS
      run: |
          dotnet build ./Nivaes.TimeLine.iOS/ --configuration Release --framework net8.0-ios --no-restore
          dotnet build ./Nivaes.TimeLine.iOS/ --configuration Release --framework net8.0-maccatalyst --no-restore

    #- name: Build TimeLine.iOS.Sample
    #  run: dotnet build ./Nivaes.TimeLine.iOS.Sample/ --configuration Release

  build-Windows:
    runs-on: windows-2022
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.net_core_version }}
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Restore Dependencies
      run: |
          dotnet restore ./Nivaes.TimeLine.WinUI/
          dotnet restore ./Nivaes.TimeLine.WinUI.Windows.Sample/

    # - name: Build App.Cross.WinUI
    #   run: |
    #       dotnet build ./Nivaes.TimeLine.WinUI/ --configuration Release --framework net8.0-windows10.0.19041.0 --no-restore
    #       dotnet build ./Nivaes.TimeLine.WinUI.Windows.Sample/ --configuration Release --framework net8.0-windows10.0.19041.0 --no-restore

    - name: Build App.Cross.WinUI
      run: |
          msbuild /m /p:Configuration=Release,Platform=x86 ./Nivaes.TimeLine.WinUI/
          msbuild /m /p:Configuration=Release,Platform=x64 ./Nivaes.TimeLine.WinUI/
          msbuild /m /p:Configuration=Release,Platform=ARM64 ./Nivaes.TimeLine.WinUI/


